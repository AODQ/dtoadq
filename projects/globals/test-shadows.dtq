TEXTURESSTART
TEXTURESEND
MATERIALSSTART
{
  "materials": [
    {
      "diffuse": "1.0",
      "specular": "0.0",
      "glossy": "0.4",
      "retroreflective": "0.0",
      "transmittive": "0.0"
    },
    {
      "diffuse": "1.0",
      "specular": "0.0",
      "glossy": "0.0",
      "retroreflective": "0.0",
      "transmittive": "0.0"
    }
  ]
}
MATERIALSEND

CAMERASTART
void Update_Camera ( Camera* camera, float time ) {
  if ( camera->flags > 0 ) return;
}
CAMERAEND

EMITTERSTART
__constant int EMITTER_AMT = 1;
Emitter REmission ( int index, float time ) {
  float f = (float)(index+1);
  float3 origin = (float3)(8.5f + f*-12.4f, 6.0f, -4.5f);
  origin.z -= 4.0f;
  // float radius   = 1.0f/f * 0.25f + (4.0f-f)*0.18f,
  //       emission = 1.0f;
  float3 emission = (float3)(fabs(cos(f*2.43f)),
                             fabs(sin(f*0.2f)), 0.9f);
  return (Emitter){origin, emission, 2.1f};
}
EMITTEREND

UPDATEMAPSTART
void Room ( int avoid, float3 origin, SampledPt* pt, float time, float3 dval ) {
}

void Panels ( int avoid, float3 origin, SampledPt* pt, float time, float3 dval){
  float3 torigin = origin;
  float dist;

  // dist = sdSphere(origin + (float3)(cos(time)*2.5f, sin(time)*2.5f, 0.0), 4.0f);
   dist = sdSphere(origin, 1.0f);
  MapUnionG(avoid, pt, dist, 0, (float3)(0.8f, 0.5f, 0.8f));
}

void Update_Map ( int avoid, float3 origin, SampledPt* pt, float time,
                  __read_only image2d_array_t textures, float3 dval ) {
  Room(avoid, origin, pt, time, dval);
  Panels(avoid, origin, pt, time, dval);
}
UPDATEMAPEND